name: CodeReview

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get git diff
        run: |
          git fetch origin
          git diff --unified=3 ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > diff.txt
          echo "DIFF_CONTENT<<EOF" >> $GITHUB_ENV
          cat diff.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send to LLM for review
        run: |
          ESCAPED_DIFF=$(echo "$DIFF_CONTENT" | jq -sRr @json)

          PROMPT=$(jq -n --arg diff "$ESCAPED_DIFF" '
            "You are a senior-level software engineer performing a thorough code review.

            Given the following git diff, do the following:

            1. Provide a short summary of what the PR does.
            2. For each issue you find:
                - Include the file path and line number
                - Quote the original code line
                - Propose a better version
                - Explain why your suggestion improves the code

            Use the following format:

            ðŸ“„ <file_path>

            - [Line <line_number>]
              \`\`\`original code\`\`\`
              â†’ Suggested change:
              \`\`\`suggested code\`\`\`
              **Reason**: explanation...

            Here is the git diff:

            \($diff)"
          ')

          REQUEST_BODY=$(jq -n \
            --arg model "${{ secrets.REVIEW_MODEL_NAME }}" \
            --arg prompt "$PROMPT" \
            '{model: $model, prompt: $prompt, stream: false}'
          )

          RESPONSE=$(curl -s -X POST ${{ secrets.REVIEW_API_URL }} \
            -H "Content-Type: application/json" \
            -d "$REQUEST_BODY" | jq -r .response)

          echo "REVIEW_RESPONSE<<EOF" >> $GITHUB_ENV
          echo "$RESPONSE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post review comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REVIEW_BOT_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.REVIEW_RESPONSE
            });
